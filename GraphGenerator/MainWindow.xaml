<Window x:Class="GraphGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GraphGenerator"
        xmlns:vm="clr-namespace:GraphGenerator.ViewModels"
        mc:Ignorable="d"
        Title="Generator grafów" Width="1024" Height="768" Background="RoyalBlue"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style x:Key="CompatibilitySquareStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="1" />
        </Style>

        <Style x:Key="AlgorithmNameTextblockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="Snow" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>

        <Style x:Key="InterfaceButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
            <Setter Property="Height" Value="100" />
            <Setter Property="Width" Value="100" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="3" />
        </Style>

        <Style x:Key="CanvasButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border"
                            BorderBrush="Snow"
                            BorderThickness="0.2"
                            Background="Transparent">
                            <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center">
                                <StackPanel>
                                    <TextBlock Text="Tutaj bydzie GRAF" TextWrapping="Wrap" TextAlignment="Center" FontSize="10" />

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,0" TextBlock.FontSize="9">
                                        <TextBlock Text="X: " />
                                        <TextBlock Text="{Binding GetGridX}" />
                                        <TextBlock Text=", Y: "  />
                                        <TextBlock Text="{Binding GetGridY}" />
                                    </StackPanel>
                                </StackPanel>
                            </ContentControl>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <!--  Need to give binding a reference to ItemsControl, because by default it tries to get property from the model class of ItemsSource collection  -->
                                    <!-- ItemsControl has the DataContext from ViewModel, and this is the context we want to retrieve -->
                                    <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.EdgeButtonIsPressed}" Value="True">-->
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.EdgeButtonIsPressed}" Value="True" />
                                    
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding DoesContainNode}" Value="True" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderBrush" Value="LimeGreen" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.EdgeButtonIsPressed}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding DoesContainNode}" Value="False" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.NodeButtonIsPressed}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding DoesContainNode}" Value="True" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.NodeButtonIsPressed}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding DoesContainNode}" Value="False" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderBrush" Value="LimeGreen" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.NodeButtonIsPressed}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderThickness" Value="2.5" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=CanvasItemsControl, Path=DataContext.EdgeButtonIsPressed}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="border" Property="BorderThickness" Value="2.5" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <StackPanel>
            <TextBlock Text="Generator grafów" FontFamily="Footlight MT Light" FontSize="30" Foreground="Cornsilk"
                       HorizontalAlignment="Center" Margin="0,10,0,15" />
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" HorizontalAlignment="Center" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <Button Background="{Binding NodeButtonIsPressed, Converter={StaticResource ButtonBackgroundConverter}}" Command="{Binding AddNode}" Margin="0,0,10,0" Style="{StaticResource InterfaceButtonStyle}">
                            <StackPanel>
                                <Image Source="/Resources/NodeButton.png" Stretch="None" />
                                <TextBlock Text="Wierzchołek" Foreground="Black" HorizontalAlignment="Center" />
                            </StackPanel>
                        </Button>

                        <Button Background="{Binding EdgeButtonIsPressed, Converter={StaticResource ButtonBackgroundConverter}}"  Command="{Binding AddEdge}" Style="{StaticResource InterfaceButtonStyle}">
                            <StackPanel>
                                <!--<Line X1="4" Y1="54" X2="60" Y2="10" Width="64" Height="64" Stroke="Black" StrokeThickness="5.5" />-->
                                <Image Source="/Resources/EdgeButton.png" Stretch="None" />
                                <TextBlock Text="Krawędź" Foreground="Black" HorizontalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <GroupBox Header="Kompatybilność grafu" Grid.Row="3" Height="250" Width="180" BorderBrush="Black" Style="{StaticResource GroupBoxStyle}">
                        <Grid VerticalAlignment="Center" Margin="10,0,0,0">
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource AlgorithmNameTextblockStyle}" />    <!-- Apply style to all TextBlock's in container -->
                                <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource CompatibilitySquareStyle}" />
                            </Grid.Resources>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Create new user control? -->
                            <Rectangle Grid.Row="0" Fill="{Binding Colors[0]}" />
                            <Rectangle Grid.Row="1" Fill="{Binding Colors[1]}" />
                            <Rectangle Grid.Row="2" Fill="{Binding Colors[2]}" />
                            <Rectangle Grid.Row="3" Fill="{Binding Colors[3]}" />
                            <Rectangle Grid.Row="4" Fill="{Binding Colors[4]}" />
                            <Rectangle Grid.Row="5" Fill="{Binding Colors[5]}" />
                            <Rectangle Grid.Row="6" Fill="{Binding Colors[6]}" />

                            <TextBlock Text="Przeszukiwanie wszerz" Grid.Row="0" />
                            <TextBlock Text="Przeszukiwanie w głąb" Grid.Row="1" />
                            <TextBlock Text="Sortowanie topologiczne" Grid.Row="2" />
                            <TextBlock Text="Algorytm Kruskala" Grid.Row="3" />
                            <TextBlock Text="Wykrywanie dwudzielności" Grid.Row="4" />
                            <TextBlock Text="Algorytm Dijkstry" Grid.Row="5" />
                            <TextBlock Text="Algorytm Bellmana-Forda" Grid.Row="6" />
                        </Grid>
                    </GroupBox>

                    <Button Background="Gold" Command="{Binding ChangeCompatibility}" Grid.Row="5" Style="{StaticResource InterfaceButtonStyle}">
                        <StackPanel>
                            <Image Source="/Resources/SaveButton.png" Stretch="None" />
                            <TextBlock Text="Zapisz" Foreground="Black" HorizontalAlignment="Center" />
                        </StackPanel>
                    </Button>

                    <Button Background="Gold" Grid.Row="6" Margin="0,10,0,0" Style="{StaticResource InterfaceButtonStyle}">
                        <StackPanel>
                            <Image Source="/Resources/OpenButton.png" Stretch="None" />
                            <TextBlock Text="Otwórz" Foreground="Black" HorizontalAlignment="Center" />
                        </StackPanel>
                    </Button>
                </Grid>

                <!--<Canvas Background="LightGray" Grid.Column="1" Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Margin="0,0,15,0">
                    <Button Width="66" Height="66" Style="{StaticResource CanvasButtonStyle}" />
                </Canvas>-->

                <ItemsControl ItemsSource="{Binding CanvasRectangles}" Grid.Column="1" Name="CanvasItemsControl" Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Margin="0,0,15,0" >           <!--11x10--> 
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="LightGray" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Width="{Binding SideLength}" Height="{Binding SideLength}" Style="{StaticResource CanvasButtonStyle}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </Grid>
        </StackPanel>
    </Grid>
</Window>
