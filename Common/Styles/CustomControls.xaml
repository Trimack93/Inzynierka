<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Common.Styles"
                    xmlns:controls="clr-namespace:Common.Controls"
                    xmlns:conv="clr-namespace:Common.Utilities.Converters">

    <!--<Style TargetType="{x:Type controls:NodeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NodeControl}">
                    <Grid>
                        <Grid.Resources>
                            <conv:AlignmentToGridPositionConverter x:Key="AlignmentToGridPositionConverter" />
                            <conv:ThicknessToFontWeigthConverter x:Key="ThicknessToFontWeigthConverter" />
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{TemplateBinding NodeName}"
                            Grid.Row="{TemplateBinding NameVerticalAlignment, Converter={StaticResource AlignmentToGridPositionConverter}}"
                            Grid.Column="{TemplateBinding NameHorizontalAlignment, Converter={StaticResource AlignmentToGridPositionConverter}}"
                            FontWeight="{TemplateBinding NodeThickness, Converter={StaticResource ThicknessToFontWeigthConverter}}"
                            HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="66" />

                        <Ellipse Grid.Row="1" Grid.Column="1" Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Stroke="Black" StrokeThickness="{TemplateBinding NodeThickness}" Fill="{TemplateBinding NodeColor}" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{TemplateBinding NodeValue}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" FontWeight="DemiBold" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type controls:InterfaceButton}">
        <Setter Property="Width" Value="100" />
        <!-- Default values -->
        <Setter Property="Height" Value="100" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ToolTipService.ShowDuration" Value="12000" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:InterfaceButton}">

                    <Border Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <!-- Which can sometimes be overriden -->

                        <StackPanel VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Image Source="{TemplateBinding ImageSource}" Stretch="None" />
                            <TextBlock Text="{TemplateBinding Title}" Foreground="Black" HorizontalAlignment="Center" FontWeight="DemiBold" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.95" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Red" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="DarkOrange" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="LimeGreen" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Chartreuse" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Orange" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Wheat" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Gold" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Yellow" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ValidableTextboxStyle" TargetType="{x:Type TextBox}">
        <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1.5">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>