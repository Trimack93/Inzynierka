<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Common.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:Common.Controls">

    <!-- Base button style providing default darken effect on MouseOver and lighten effect on MousePressed, also border style formatting -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="ToolTipService.ShowDuration" Value="12000" />
        <Setter Property="BorderThickness" Value="1.5" />
        <!-- Default value for BorderThickness, can be overriden in external style setter because of TemplateBinding -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="Black"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.95" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Red" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="DarkOrange" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="LimeGreen" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Chartreuse" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Orange" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Wheat" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Gold" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Yellow" />
                        </MultiTrigger>

                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Chartreuse" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:InterfaceButton}">
        <Setter Property="Width" Value="100" />
        <!-- Default values -->
        <Setter Property="Height" Value="100" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ToolTipService.ShowDuration" Value="12000" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:InterfaceButton}">

                    <Border Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <!-- Which can sometimes be overriden -->

                        <StackPanel VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Image Source="{TemplateBinding ImageSource}" Stretch="None" />
                            <TextBlock Text="{TemplateBinding Title}" Foreground="Black" HorizontalAlignment="Center" FontWeight="DemiBold" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.95" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Red" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="DarkOrange" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="LimeGreen" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Chartreuse" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Orange" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Wheat" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Background" Value="Gold" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="Background" Value="Yellow" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ChooseModeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="210" />
        <Setter Property="Height" Value="210" />
        <Setter Property="Background" Value="LimeGreen" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="0,0,0,15" />
    </Style>

</ResourceDictionary>