<Window x:Class="WpfApplication1.Views.LearningView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:local="clr-namespace:WpfApplication1.Views"
        xmlns:vm="clr-namespace:WpfApplication1.ViewModels"
        xmlns:controls="clr-namespace:Common.Controls;assembly=Common"
        xmlns:model="clr-namespace:Common.Models.Canvas;assembly=Common"
        xmlns:behav="clr-namespace:Common.Utilities.Behaviours;assembly=Common"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"
        Title="Algorytmy grafowe" Width="1024" Height="768" Background="RoyalBlue"
        ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Name="LearningWindow">
    
    <Window.DataContext>
        <vm:LearningViewModel />
    </Window.DataContext>

    <Window.Resources>
        
        <!-- Can't move it to Styles, because image path from there will be different - during runtime it works, but designer can't resolve this -->
        <Style x:Key="EndSequenceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="ToolTipService.ShowDuration" Value="12000"/>
            <Setter Property="Margin" Value="80,0,0,0" />
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border"
                            BorderThickness="1.5"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="Black">

                            <Grid>
                                <Image Source="/Resources/SequenceEnd.png" Stretch="Fill" />
                            </Grid>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.9" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Gold" />
                            </Trigger>
                            
                            <!-- Correct button position when STOP button is visible -->
                            <DataTrigger Binding="{Binding IsStopButtonVisible}" Value="True">
                                <Setter Property="Margin" Value="0,0,20,0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StackPanelStyle" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Grid.Row" Value="2" />

            <Style.Triggers>
                
                <!-- Correct StackPanel position when nodes queue is hidden -->
                <DataTrigger Binding="{Binding IsNodeNamesControlVisible}" Value="False">
                    <Setter Property="Grid.Row" Value="4" />
                    <Setter Property="Margin" Value="0,0,0,40" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <StackPanel>
            <TextBlock Text="{Binding AlgorithmName}" FontFamily="Footlight MT Light" FontSize="30" Foreground="Cornsilk"
                       HorizontalAlignment="Center" Margin="0,10,0,15" />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <!--<Rectangle Grid.Column="0" Width="726" Height="660" HorizontalAlignment="Left" Fill="LightGray" Margin="7,0,0,0"></Rectangle>-->


                <ItemsControl ItemsSource="{Binding CanvasItems}" Grid.Column="0" Name="CanvasItemsControl" HorizontalAlignment="Left"
                            Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}" Margin="7,0,0,0" >
                    <!--11x10-->
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="LightGray" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding CanvasLeft}" />
                            <Setter Property="Canvas.Top" Value="{Binding CanvasTop}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type model:CanvasRectangle}">
                            <Button Width="{Binding SideLength}" Height="{Binding SideLength}" Style="{StaticResource LearningCanvasButtonStyle}" />
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type model:CanvasEdge}">
                            <controls:EdgeControl X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}"
                                                  Edge="{Binding Edge}"
                                                  CanFireMouseOverEvents="{Binding DataContext.CanEdgesAnimate, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  behav:EdgeControlBehaviour.EdgeClickedCommand="{Binding DataContext.EdgeClicked, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>

                <Grid Grid.Column="1" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Width="250" Height="350" Margin="0,-28,0,0" Visibility="{Binding AreInstructionsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Background="Black" HorizontalAlignment="Center" VerticalAlignment="Center">
                        
                        <TextBlock Text="Instrukcje" FontWeight="Bold" FontSize="16" Foreground="DodgerBlue" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" />
                        <Line X1="15" Y1="10" X2="235" Y2="10" Stroke="Gold" StrokeThickness="1.5" />

                        <TextBlock Text="{Binding Instruction, Converter={StaticResource StringToNewlineStringConverter}}"
                                   FontSize="11" TextWrapping="Wrap" HorizontalAlignment="Center" Foreground="Snow" Margin="10,10,10,0" TextAlignment="Justify" />
                    </StackPanel>

                    <StackPanel Grid.Row="0" Width="250" Height="350" Margin="0,-28,0,0" Visibility="{Binding IsExamPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                Background="Black" HorizontalAlignment="Center" VerticalAlignment="Center">

                        <TextBlock Text="Egzamin" FontWeight="Bold" FontSize="16" Foreground="DodgerBlue" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0" />
                        <Line X1="15" Y1="10" X2="235" Y2="10" Stroke="Gold" StrokeThickness="1.5" />

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,20">
                            <Button Content="1" Margin="0,0,30,0" Style="{StaticResource ExamPage1ButtonStyle}" ToolTip="Przełącz na 1 stronę."
                                    Foreground="{Binding PageColors[0]}" Command="{Binding PageClick}" CommandParameter="1" />

                            <Button Content="2" Style="{StaticResource ExamPage2ButtonStyle}" ToolTip="Przełącz na 2 stronę."
                                    Foreground="{Binding PageColors[1]}" Command="{Binding PageClick}" CommandParameter="2" />
                        </StackPanel>

                        <TextBlock FontSize="11" TextWrapping="Wrap" HorizontalAlignment="Center" Foreground="SeaShell" Margin="10,0,10,0" TextAlignment="Justify"
                                   Text="{Binding ExamInfo, Converter={StaticResource StringToNewlineStringConverter}}"/>
                    </StackPanel>

                    <StackPanel Style="{StaticResource StackPanelStyle}">
                        <Button Width="126" Height="158" Style="{StaticResource EndSequenceButtonStyle}"
                                Command="{Binding EndSequenceClick}" CommandParameter="{Binding ElementName=LearningWindow}"
                                ToolTip="Po naciśnięciu tego przycisku zakończysz obecnie wykonywaną sekwencję.\n
                                Spowoduje to sprawdzenie, czy wykonałeś wszystkie kroki zgodnie z wybranym algorytmem.\n
                                W przypadku wykrycia nieprawidłowości zostaniesz o tym poinformowany, a jeśli znajdowałeś się w trybie nauki,\n
                                graf zostanie przywrócony do postaci, w jakiej znajdował się na początku sekwencji." />

                        <Button Content="STOP" Width="80" Height="80"
                                FontWeight="Bold" FontSize="20" BorderThickness="3" Background="Orange"
                                Command="{Binding StopButtonClick}" CommandParameter="{Binding ElementName=LearningWindow}"
                                Visibility="{Binding IsStopButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource CenteredButtonStyle}"
                                ToolTip="Algorytm wykrywania dwudzielności: naciśnij, jeśli zauważysz, że graf nie jest dwudzielny.\n
                                Algorytm Bellmana-Forda: naciśnij, jeśli masz podstawy twierdzić, iż graf posiada ujemny cykl." />
                    </StackPanel>

                    <StackPanel Grid.Row="4" Visibility="{Binding IsNodeNamesControlVisible, Converter={StaticResource BoolToVisibilityConverter}}" >
                        <TextBlock Text="Kolejka wierzchołków:" Foreground="Snow" FontSize="14" HorizontalAlignment="Center" Margin="0,0,0,15" />
                        <!--<Rectangle Fill="Snow" Width="250" Height="40" />-->
                        <controls:NodeNamesList Width="250" ElementWidth="40" NodesList="{Binding DataContext.CanvasNodes, RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"
                                                ComboBoxEnabled="{Binding DataContext.IsNodeNamesControlEnabled, RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"
                                                ElementsList="{Binding DataContext.ComboBoxItems, RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Row="6" HorizontalAlignment="Center">
                        <Button Content="O PROGRAMIE" TextBlock.FontWeight="DemiBold" Background="LimeGreen" Click="AboutButton_Click"
                           Height="35" Width="120" Margin="0,0,15,0" Style="{StaticResource CenteredButtonStyle}" />
                        
                        <Button Content="KONIEC" TextBlock.FontWeight="DemiBold" Background="Red" Click="CloseButton_Click"
                            Height="35" Width="120" Style="{StaticResource CenteredButtonStyle}" />
                    </StackPanel>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
